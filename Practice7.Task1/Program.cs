using System;

namespace Practice7.Task1
{
  /// <summary>
  /// 1. Создайте интерфейс `IStorage<T>`, который будет определять базовые операции
  ///для хранения и получения данных типа `T` в хранилище.
  ///2. Определите в интерфейсе методы:
  ///- `void Add(T item)`: добавляет элемент `item` в хранилище.
  ///- `T Get(int index)`: возвращает элемент из хранилища по указанному индексу.
  ///- `int Count { get; }`: свойство, возвращающее общее количество элементов в хранилище.
  ///3. Создайте класс `ListStorage<T>`, который реализует интерфейс `IStorage<T>`. В
  ///этом классе используйте обобщенную коллекцию `List<T>` для хранения элементов.
  ///4. Реализуйте методы интерфейса `IStorage<T>` в классе `ListStorage<T>`:
  ///- Добавление элемента в хранилище должно быть реализовано с помощью метода
  ///`Add()` коллекции `List<T>`.
  ///- Получение элемента из хранилища по индексу должно быть реализовано с
  ///помощью индексатора коллекции `List<T>`.
  ///- Количество элементов в хранилище должно быть реализовано с помощью свойства
  ///`Count` коллекции `List<T>`.
  ///5. Создайте класс `Program` с методом `Main()`, где вы можете создать объект класса
  ///`ListStorage<T>`, добавить элементы в хранилище и получить элементы из хранилища.
  /// </summary>
  class Program
  {
    static void Main(string[] args)
    {
      ListStorage<int> listStorage = new ListStorage<int>();
      listStorage.Add(5);
      listStorage.Add(3);
      listStorage.Add(5);
      Console.WriteLine(listStorage.Count);
      Console.WriteLine(listStorage.Get(0));
    }
  }
}
